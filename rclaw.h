#ifndef __RCLAW_H__
#define __RCLAW_H__

// page 64
typedef enum
{
	// DRIVE_FORWARD_MOTOR_1 = 0,
	// DRIVE_BACKWARDS_MOTOR_1 = 1,
	// SET_MAIN_VOLTAGE_MINIMUM = 2,
	// SET_MAIN_VOLTAGE_MAXIMUM = 3,
	// DRIVE_FORWARD_MOTOR_2 = 4,
	// DRIVE_BACKWARDS_MOTOR_2 = 5,
	// DRIVE_MOTOR_1 = 6,
	// DRIVE_MOTOR_2 = 7,
	// DRIVE_FORWARD_MIXED_MODE = 8,
	// DRIVE_BACKWARDS_MIXED_MODE = 9,
	// TURN_RIGHT_MIXED_MODE = 10,
	// TURN_LEFT_MIXED_MODE = 11,
	// DRIVE_FORWARD_OR_BACKWARD = 12,
	// TURN_LEFT_OR_RIGHT = 13,

	// READ_ENCODER_COUNT_VALUE_FOR_M1 = 16,
	// READ_ENCODER_COUNT_VALUE_FOR_M2 = 17,
	// READ_M1_SPEED_IN_ENCODER_COUNTS_PER_SECOND = 18,
	// READ_M2_SPEED_IN_ENCODER_COUNTS_PER_SECOND = 19,
	// RESETS_ENCODER_REGISTERS_FOR_M1_AND_M2 = 20,

	READ_FIRMWARE_VERSION = 21,
	
	// SET_ENCODER_1_REGISTER = 22,
	// SET_ENCODER_2_REGISTER = 23,

	READ_MAIN_BATTERY_VOLTAGE = 24,
	READ_LOGIC_BATTERY_VOLTAGE = 25,
	SET_MINIMUM_LOGIC_VOLTAGE_LEVEL = 26,
	SET_MAXIMUM_LOGIC_VOLTAGE_LEVEL = 27,
	
	SET_VELOCITY_PID_CONSTANTS_FOR_M1 = 28,
	SET_VELOCITY_PID_CONSTANTS_FOR_M2 = 29,
	
	// READ_CURRENT_M1_RAW_SPEED = 30,
	// READ_CURRENT_M2_RAW_SPEED = 31,

	DRIVE_M1_WITH_SIGNED_DUTY_CYCLE = 32,
	DRIVE_M2_WITH_SIGNED_DUTY_CYCLE = 33,
	DRIVE_M1_M2_WITH_SIGNED_DUTY_CYCLE = 34,
	DRIVE_M1_WITH_SIGNED_SPEED = 35,
	DRIVE_M2_WITH_SIGNED_SPEED = 36,
	DRIVE_M1_M2_WITH_SIGNED_SPEED = 37,
	DRIVE_M1_WITH_SIGNED_SPEED_AND_ACCELERATION = 38,
	DRIVE_M2_WITH_SIGNED_SPEED_AND_ACCELERATION = 39,
	DRIVE_M1_M2_WITH_SIGNED_SPEED_AND_ACCELERATION = 40,
	DRIVE_M1_WITH_SIGNED_SPEED_AND_DISTANCE_BUFFERED = 41,
	DRIVE_M2_WITH_SIGNED_SPEED_AND_DISTANCE_BUFFERED = 42,
	DRIVE_M1_M2_WITH_SIGNED_SPEED_AND_DISTANCE_BUFFERED = 43,
	DRIVE_M1_WITH_SIGNED_SPEED_ACCELERATION_AND_DISTANCE_BUFFERED = 44,
	DRIVE_M2_WITH_SIGNED_SPEED_ACCELERATION_AND_DISTANCE_BUFFERED = 45,
	DRIVE_M1_M2_WITH_SIGNED_SPEED_ACCELERATION_AND_DISTANCE_BUFFERED = 46,
	READ_BUFFER_LENGTH = 47,

	READ_MOTOR_PWMS = 48,
	READ_MOTOR_CURRENTS = 49,

	DRIVE_M1_M2_WITH_INDIVIDUAL_SIGNED_SPEED_AND_ACCELERATION = 50,
	DRIVE_M1_M2_WITH_INDIVIDUAL_SIGNED_SPEED_ACCEL_AND_DISTANCE = 51,
	DRIVE_M1_WITH_SIGNED_DUTY_AND_ACCEL = 52,
	DRIVE_M2_WITH_SIGNED_DUTY_AND_ACCEL = 53,
	DRIVE_M1_M2_WITH_SIGNED_DUTY_AND_ACCEL = 54,
	READ_MOTOR_1_VELOCITY_PID_CONSTANTS = 55,
	READ_MOTOR_2_VELOCITY_PID_CONSTANTS = 56,

	SET_MAIN_BATTERY_VOLTAGES = 57,
	SET_LOGIC_BATTERY_VOLTAGES = 58,
	READ_MAIN_BATTERY_VOLTAGE_SETTINGS = 59,
	READ_LOGIC_BATTERY_VOLTAGE_SETTINGS = 60,

	SET_POSITION_PID_CONSTANTS_FOR_M1 = 61,
	SET_POSITION_PID_CONSTANTS_FOR_M2 = 62,
	READ_MOTOR_1_POSITION_PID_CONSTANTS = 63,
	READ_MOTOR_2_POSITION_PID_CONSTANTS = 64,
	DRIVE_M1_WITH_SPEED_ACCEL_DECCEL_AND_POSITION = 65,
	DRIVE_M2_WITH_SPEED_ACCEL_DECCEL_AND_POSITION = 66,
	DRIVE_M1_M2_WITH_SPEED_ACCEL_DECCEL_AND_POSITION = 67,

	SET_DEFAULT_DUTY_CYCLE_ACCELERATION_FOR_M1 = 68,
	SET_DEFAULT_DUTY_CYCLE_ACCELERATION_FOR_M2 = 69,
	
	SET_S3_S4_AND_S5_MODES = 74,
	READ_S3_S4_AND_S5_MODES = 75,
	SET_DEADBAND_FOR_RC_ANALOG_CONTROLS = 76,
	READ_DEADBAND_FOR_RC_ANALOG_CONTROLS = 77,
	
	// READ_ENCODERS_COUNTS = 78,
	// READ_MOTOR_SPEEDS = 79,
	
	RESTORE_DEFAULTS = 80,
	READ_DEFAULT_DUTY_CYCLE_ACCELERATIONS = 81,
	READ_TEMPERATURE = 82,
	READ_TEMPERATURE_2 = 83,
	
	READ_STATUS = 90,
	READ_ENCODER_MODES = 91,
	SET_MOTOR_1_ENCODER_MODE = 92,
	SET_MOTOR_2_ENCODER_MODE = 93,
	WRITE_SETTINGS_TO_EEPROM = 94,
	READ_SETTINGS_FROM_EEPROM = 95,

	SET_STANDARD_CONFIG_SETTINGS = 98,
	READ_STANDARD_CONFIG_SETTINGS = 99,
	SET_CTRL_MODES = 100,
	READ_CTRL_MODES = 101,
	SET_CTRL1 = 102,
	SET_CTRL2 = 103,
	READ_CTRLS = 104,

	SET_M1_MAXIMUM_CURRENT = 133,
	SET_M2_MAXIMUM_CURRENT = 134,
	READ_M1_MAXIMUM_CURRENT = 135,
	READ_M2_MAXIMUM_CURRENT = 136,
	
	SET_PWM_MODE = 148,
	READ_PWM_MODE = 149
}PACKAGE_CMD;

int rclawReadWriteData ( const int fd, const PACKAGE_CMD cmd, uint8_t * const restrict data, size_t * const restrict size );
int initLib ( const char * const restrict device );

#endif